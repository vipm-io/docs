name: ci
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  # allow manual build here:
  # https://github.com/vipm-io/docs/actions/workflows/ci.yml
  workflow_dispatch:

jobs:
  build-online:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4
      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true
      - name: Set up Python
        run: uv python install
      - name: Sync dependencies
        run: uv sync
      - name: Build online docs
        run: uv run mkdocs build --strict
      - name: Upload site artifact
        uses: actions/upload-artifact@v4
        with:
          name: site-online-pr-${{ github.event.pull_request.number || github.run_number }}
          path: site/
          retention-days: 7

  build-offline:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4
      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true
      - name: Set up Python
        run: uv python install
      - name: Sync dependencies
        run: uv sync
      - name: Create offline config
        run: |
          cat > mkdocs-offline.yml << 'EOF'
          INHERIT: mkdocs.yml
          use_directory_urls: false
          EOF
      - name: Build offline docs
        run: uv run mkdocs build -f mkdocs-offline.yml -d help --strict
      - name: Create offline package
        run: |
          cd help
          zip -r ../vipm-help-offline.zip .
          cd ..
      - name: Upload offline package
        uses: actions/upload-artifact@v4
        with:
          name: vipm-help-offline-${{ github.event.pull_request.number || github.run_number }}
          path: vipm-help-offline.zip
          retention-days: 90

  deploy:
    runs-on: ubuntu-latest
    needs: build-online
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true
      - name: Set up Python
        run: uv python install
      - name: Sync dependencies
        run: uv sync
      - run: uv run mkdocs gh-deploy --force

  comment-preview:
    runs-on: ubuntu-latest
    needs: [build-online, build-offline]
    if: github.event_name == 'pull_request'
    permissions:
      pull-requests: write
    steps:
      - name: Comment on PR
        uses: actions/github-script@v7
        with:
          script: |
            const comment = `## Documentation Build Successful
            
            Built in both online and offline formats.
            
            **Online Version (GitHub Pages)**
            - Artifact: \`site-online-pr-${{ github.event.pull_request.number }}\`
            - Use with a web server: \`python -m http.server\`
            
            **Offline Version (for VIPM distribution)**
            - Artifact: \`vipm-help-offline-${{ github.event.pull_request.number }}.zip\`
            - Works by double-clicking \`index.html\`
            
            **Download artifacts:** ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
            
            **To test offline:**
            1. Download \`vipm-help-offline-${{ github.event.pull_request.number }}.zip\`
            2. Extract and open \`index.html\``;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
